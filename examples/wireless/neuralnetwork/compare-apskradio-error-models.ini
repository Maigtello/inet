[General]
network = CompareNeuralNetworkErrorModels
sim-time-limit = 100s
output-scalar-file = "${resultdir}/ApskRadio/${configname}/numNoiseSources=${numNoiseSources}/power=${power}/duration=${duration}/repetition=${repetition}.sca"
repeat = 5
num-rngs = 2

**.param-recording = false
**.vector-recording = false
**.bin-recording = false
**.host[0].app[0].packetReceived:count.scalar-recording = true
**.scalar-recording = false

**.errorModel.rng-0 = 1

*.numHosts = 2
**.crcMode = "computed"
**.fcsMode = "computed"
**.arp.typename = "GlobalArp"

**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1000m
**.constraintAreaMaxY = 400m
**.constraintAreaMaxZ = 0m

# mobility
*.host[*].mobility.typename = "StationaryMobility"
*.host[*].mobility.initFromDisplayString = false
*.host[0].mobility.initialX = 100m
*.host[1].mobility.initialX = 200m
*.host[*].mobility.initialY = 200m
*.host[*].mobility.initialZ = 0m

# app
*.host[1].numApps = 1
*.host[1].app[0].typename = "UdpBasicApp"
*.host[1].app[0].destAddresses = "host[0]"
*.host[1].app[0].destPort = 1000
*.host[1].app[0].messageLength = 8B
*.host[1].app[0].sendInterval = 1s

*.host[0].numApps = 1
*.host[0].app[0].typename = "UdpSink"
*.host[0].app[0].localPort = 1000

# medium
*.radioMedium.backgroundNoise.power = 1E-13W

# wlan
*.host[*].wlan[0].typename = "AckingWirelessInterface"
*.host[*].wlan[0].bitrate = 36Mbps 
*.host[*].wlan[0].mac.useAck = false
*.host[*].wlan[0].mac.headerLength = 24B
*.host[*].wlan[0].radio.centerFrequency = 2.4GHz
*.host[*].wlan[0].radio.bandwidth = 20MHz
*.host[*].wlan[0].radio.transmitter.preambleDuration = 0s
*.host[*].wlan[0].radio.transmitter.headerLength = 32b
*.host[*].wlan[0].radio.transmitter.codeRate = 2
*.host[*].wlan[0].radio.transmitter.modulation = "BPSK"
*.host[*].wlan[0].radio.transmitter.power = 0.1mW
*.host[*].wlan[0].radio.receiver.sensitivity = -109dBm
*.host[*].wlan[0].radio.receiver.energyDetection = -90dBm
*.host[*].wlan[0].radio.receiver.snirThreshold = -inf dB

# noise
*.numNoiseSources = ${numNoiseSources = 0 .. 20 step 1}
*.noiseSource[*].transmitter.centerFrequency = 2.4 GHz
*.noiseSource[*].transmitter.bandwidth = 20MHz
#*.noiseSource[*].transmitter.power = ${power = 20}uW # ${power = 5 .. 50 step 5}uW
*.noiseSource[*].transmitter.power = ${power = 5 .. 50 step 5}uW
#*.noiseSource[*].transmitter.duration = ${duration = 1}us # ${duration = 0.2 .. 2 step 0.2}us
*.noiseSource[*].transmitter.duration = ${duration = 0.2 .. 2 step 0.2}us
*.noiseSource[*].startTime = uniform(1s 0us, 1s 15us)
*.noiseSource[*].sleepInterval = 1s

[Config DimensionalBitlevel]
description = "bit level simulation using dimensional analog model"

*.radioMedium.typename = "ApskLayeredDimensionalRadioMedium"
*.host[*].wlan[0].radio.typename = "ApskLayeredDimensionalRadio"
*.noiseSource[*].transmitter.typename = "NoiseDimensionalTransmitter"

# transmitter
*.host[*].wlan[0].radio.transmitter.levelOfDetail = "symbol"
*.host[*].wlan[0].radio.transmitter.modulator.modulation = "BPSK"
*.host[*].wlan[0].radio.transmitter.encoder.fecEncoder.typename = "ConvolutionalCoder"
*.host[*].wlan[0].radio.transmitter.encoder.fecEncoder.transferFunctionMatrix = "1 3"
*.host[*].wlan[0].radio.transmitter.encoder.fecEncoder.constraintLengthVector = "2"
*.host[*].wlan[0].radio.transmitter.encoder.fecEncoder.puncturingMatrix = "1; 1"
*.host[*].wlan[0].radio.transmitter.encoder.fecEncoder.punctureK = 1
*.host[*].wlan[0].radio.transmitter.encoder.fecEncoder.punctureN = 2

# receiver
*.host[*].wlan[0].radio.receiver.levelOfDetail = "symbol"
*.host[*].wlan[0].radio.receiver.demodulator.modulation = "BPSK"
*.host[*].wlan[0].radio.receiver.decoder.fecDecoder.typename = "ConvolutionalCoder"
*.host[*].wlan[0].radio.receiver.decoder.fecDecoder.transferFunctionMatrix = "1 3"
*.host[*].wlan[0].radio.receiver.decoder.fecDecoder.constraintLengthVector = "2"
*.host[*].wlan[0].radio.receiver.decoder.fecDecoder.puncturingMatrix = "1; 1"
*.host[*].wlan[0].radio.receiver.decoder.fecDecoder.punctureK = 1
*.host[*].wlan[0].radio.receiver.decoder.fecDecoder.punctureN = 2

[Config ScalarPacketlevel]
description = "packet level simulation using scalar analog model"

*.radioMedium.typename = "ApskScalarRadioMedium"
*.host[*].wlan[0].radio.typename = "ApskScalarRadio"
*.noiseSource[*].transmitter.typename = "NoiseScalarTransmitter"

[Config ScalarPacketlevelNeuralNetwork]
description = "packet level simulation using scalar analog model with neural network based error model"
extends = ScalarPacketlevel

*.host[*].wlan[0].radio.receiver.errorModel.typename = "NeuralNetworkErrorModel"
*.host[*].wlan[0].radio.receiver.errorModel.neuralNetworkModelFilenames = "models/ApskRadio_36Mbps_Bpsk_2.4GHz_20MHz.model"

[Config DimensionalPacketlevel]
description = "packet level simulation using dimensional analog model"

*.radioMedium.typename = "ApskDimensionalRadioMedium"
*.host[*].wlan[0].radio.typename = "ApskDimensionalRadio"
*.noiseSource[*].transmitter.typename = "NoiseDimensionalTransmitter"

[Config DimensionalPacketlevelNeuralNetwork]
description = "packet level simulation using scalar analog model with neural network based error model"
extends = DimensionalPacketlevel

*.host[*].wlan[0].radio.receiver.errorModel.typename = "NeuralNetworkErrorModel"
*.host[*].wlan[0].radio.receiver.errorModel.neuralNetworkModelFilenames = "models/ApskRadio_36Mbps_Bpsk_2.4GHz_20MHz.model"
